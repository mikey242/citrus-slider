let sliders=document.getElementsByClassName("skroll-slider");for(var sliderObjects=[],i=0;i<sliders.length;i++){var el=sliders[i],num=el.children.length,slides=el.querySelectorAll("div"),imgElements=el.querySelectorAll("img"),imgUrls=Array.from(el.querySelectorAll("img")).map(function(e,s){return e.src});sliderObjects[i]={slider:el,img:imgElements,slides:slides,imgUrls:imgUrls,settings:{num:num,zoom:!0,paused:!1,slideIndex:0,duration:5e3,transition:"pan"}};var settings=JSON.parse(el.dataset.skroll);for(const e of Object.keys(settings))sliderObjects[i].settings[e]=settings[e];sliderConstruct(sliderObjects[i]),autoSlide(sliderObjects[i])}function sliderConstruct(e){e.slider.classList.add(e.settings.zoom?"zoom":null,e.settings.transition);var s=document.createDocumentFragment(),t=document.createElement("DIV");t.setAttribute("class","arrows");var i=document.createElement("DIV");i.setAttribute("class","slide-arrow left-arrow");var n=document.createElement("DIV");n.setAttribute("class","slide-arrow right-arrow"),t.appendChild(i),t.appendChild(n),s.prepend(t),e.arrows=[i,n];var r=document.createElement("DIV");r.setAttribute("class","slides"),"pan"===e.settings.transition&&(r.style.width=e.settings.num+"00%");for(let s=0;s<e.settings.num;s++){e.slides[s].removeChild(e.img[s]),0===s?e.slides[s].classList.add("slide-wrap","current-slide"):e.slides[s].classList.add("slide-wrap");var d=document.createElement("DIV");d.style.backgroundImage="url("+e.imgUrls[s]+")",d.setAttribute("class","slide"),e.slides[s].appendChild(d),r.appendChild(e.slides[s])}s.appendChild(r),delete e.img,console.log(s),e.indicators={};var l=document.createElement("DIV");l.setAttribute("class","indicators");for(let t=0;t<e.settings.num;t++){var a=document.createElement("SPAN");0===t?a.setAttribute("class","slide-indicator current-indicator"):a.setAttribute("class","slide-indicator"),a.setAttribute("data-slide",t),l.appendChild(a),s.appendChild(l),e.indicators[t]=a}setBindings(e)}function setBindings(e){for(var s=0;s<e.arrows.length;s++)e.arrows[s].addEventListener("click",function(s){if(e.prevSlideIndex=e.settings.slideIndex,s.target.classList.contains("left-arrow"))var t=e.settings.slideIndex-1;else if(s.target.classList.contains("right-arrow"))t=e.settings.slideIndex+1;updateIndex(e,t),clearTimeouts(e),e.settings.paused=!0,sliderChange(e)});for(s=0;s<e.settings.num;s++)e.indicators[s].addEventListener("click",function(s){clearTimeouts(e),updateIndex(e,Number(s.target.dataset.slide)),e.settings.paused=!0,!1===s.target.classList.contains("current-indicator")&&sliderChange(e)})}function sliderChange(e){if(e.prev=e.slider.getElementsByClassName("current-slide")[0],e.settings.slideIndex<0?(e.settings.slideIndex=e.settings.num-1,e.settings.num&&e.indicators[0].parentElement.classList.add("transition-last"),setTimeout(function(){e.settings.num&&e.indicators[0].parentElement.classList.remove("transition-last")},1e3)):e.settings.slideIndex>e.settings.num-1&&(e.settings.slideIndex=0,e.settings.num&&e.indicators[0].parentElement.classList.add("transition-first"),setTimeout(function(){e.settings.num&&e.indicators[0].parentElement.classList.remove("transition-first")},1e3)),e.settings.num>1){e.slider.classList.remove("forwards","backwards");for(var s=0;s<e.settings.num;s++)e.slides[s].classList.remove("current-slide","prev-slide","next-slide"),e.settings.num&&e.indicators[s].classList.remove("current-indicator");e.prevSlideIndex<e.settings.slideIndex?e.slider.classList.add("forwards"):e.slider.classList.add("backwards"),e.slider.classList.add("animating"),e.prev.classList.add("prev-slide"),e.settings.slideIndex===e.settings.num-1?e.slides[0].classList.add("next-slide"):e.slides[e.settings.slideIndex+1]&&e.slides[e.settings.slideIndex+1].classList.add("next-slide"),e.slides[e.settings.slideIndex].classList.add("current-slide"),e.settings.num&&e.indicators[e.settings.slideIndex].classList.add("current-indicator"),"pan"===e.settings.transition&&(e.slider.children[1].style.transform="translateX(-"+e.settings.slideIndex/e.settings.num*100+"00%)"),e.intervalPrevAnim=setTimeout(function(){e.slider.classList.remove("animating")},1500),!1===e.settings.paused&&autoSlide(e)}}function updateIndex(e,s){e.prevSlideIndex=e.settings.slideIndex,e.settings.slideIndex=s}function autoSlide(e){e.intervalSlideChange=setTimeout(function(){var s=e.settings.slideIndex+1;updateIndex(e,s),sliderChange(e)},e.settings.duration)}function clearTimeouts(e){clearTimeout(e.intervalSlideChange),clearTimeout(e.intervalPrevAnim);for(var s=0;s<e.settings.num;s++)e.slides[s].classList.remove("prev-anim")}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
